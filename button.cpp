/*================================================================================

	ボタン処理[button.cpp]

												Author: 齊藤 零登
												 Date : 2022/11/29
----------------------------------------------------------------------------------
Update:
	
================================================================================*/
#include "button.h"
#include "sprite.h"
#include "texture.h"


//==================================================
// 初期化
//==================================================
void Button::Init()
{

}


//==================================================
// 終了処理
//==================================================
void Button::Uninit()
{

}


//==================================================
// 更新処理
//==================================================
void Button::Update()
{

}


//==================================================
// 描画処理
//==================================================
void Button::Draw()
{
	// テクスチャの設定
	GetDeviceContext()->PSSetShaderResources(0, 1, GetTexture(m_texNo));
	// 四角形の描画
	if (m_type >= 0) {			// ノーマル状態
		SpriteDrawColorRotation(m_pos.x, m_pos.y, m_size.x, m_size.y, 0.0f, m_color, 0.0f, 1.0f, 1.0f, 1);
	}
	else {						// 押されている状態
		SetBlendState(BLEND_MODE_SUBTRACT);
		SpriteDrawColorRotation(m_pos.x, m_pos.y, m_size.x, m_size.y, 0.0f, m_color, 0.0f, 1.0f, 1.0f, 1);
		SetBlendState(BLEND_MODE_ALPHABLEND);
	}
}


//==================================================
// セッター
//==================================================
void Button::SetButton(D3DXVECTOR2 po, D3DXVECTOR2 si, float no)
{
	m_pos = po;
	m_size = si;
	m_texNo = no;
}